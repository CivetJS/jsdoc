<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    <head>
        <meta http-equiv="content-type" content="text/html; charset={encoding}" />
        <meta name="generator" content="JsDoc Toolkit" />
        {# Link.base = "../"; /* all generated links will be relative to this */ !}
        <title>JsDoc Reference - {symbol.alias}</title>
        <style type="text/css">
        {style}
        </style>
    </head>
    <body>
        {header}
        <div id="index">{index}</div>
        {.section symbol}
        <div id="content">
            <h1 class="classTitle">{type} {alias}</h1>
            <!-- ============================== class summary ========================== -->
            <p class="description">
                {.section version}<br/>Version {@}<br/>{.end}
                {.section extend}
                <br/>Extends
                {.repeated section @} {@} {.end}
                <br/>
                {.end}
                {description}
                {.section defined}
                <br/><i>Defined in: </i> {@}
                {.end}
            </p>
            <!-- ============================== constructor summary ==================== -->
            {.section classConstructor}
            <table class="summaryTable" cellspacing="0" summary="A summary of the constructor documented in the class {alias}.">
                <caption>{type} Summary</caption>
                <thead>
                    <tr>
                        <th scope="col">Constructor Attributes</th>
                        <th scope="col">Constructor Name and Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="attributes">
                            {.section isPrivate}&lt;private&gt; {.end}
                            {.section isInner}&lt;inner&gt; {.end}
                            &nbsp;
                        </td>
                        <td class="nameDescription" {.section isHighlighted}style="color: red;"{.end}>
                            <div class="fixedFont">
                                <b>{link}</b>
                                {.section paramsString}({@}){.end}
                            </div>
                            <div class="description">{description}</div>
                        </td>
                    </tr>
                </tbody>
            </table>
            {.end}
            <!-- ============================== properties summary ===================== -->
            {.section properties}
            {.section own}
            <table class="summaryTable" cellspacing="0" summary="A summary of the fields documented in the class.">
                <caption>Field Summary</caption>
                <thead>
                    <tr>
                        <th scope="col">Field Attributes</th>
                        <th scope="col">Field Name and Description</th>
                    </tr>
                </thead>
                <tbody>
                    {.repeated section @}
                    <tr>
                        <td class="attributes">
                            {.section isPrivate}&lt;private&gt; {.end}
                            {.section isInner}&lt;inner&gt; {.end}
                            {.section isStatic}&lt;static&gt; {.end}
                            {.section isConstant}&lt;constant&gt; {.end}
                            &nbsp;
                        </td>
                        <td class="nameDescription">
                            <div class="fixedFont">
                                {.section memberOf}{@}{.end}
                                <b>{link}</b>
                            </div>
                            <div class="description">{description}</div>
                        </td>
                    </tr>
                    {.end}
                </tbody>
            </table>
            {.end}
            {.section inherited}
            <dl class="inheritsList">
                {.repeated section @}
                <dt>Fields inherited from class {link}: </dt>
                {.repeated section properties}<dd>{link}</dd>{.end}
                {.end}
            </dl>
            {.end}
            {.end}
            <!-- ============================== methods summary ======================== -->
            {.section methods}
            {.section own}
            <table class="summaryTable" cellspacing="0" summary="A summary of the methods documented in the class.">
                <caption>Method Summary</caption>
                <thead>
                    <tr>
                        <th scope="col">Method Attributes</th>
                        <th scope="col">Method Name and Description</th>
                    </tr>
                </thead>
                <tbody>
                    {.repeated section @}
                    <tr>
                        <td class="attributes">
                            {.section isPrivate}&lt;private&gt; {.end}
                            {.section isInner}&lt;inner&gt; {.end}
                            {.section isStatic}&lt;static&gt; {.end}
                            &nbsp;
                        </td>
                        <td class="nameDescription">
                            <div class="fixedFont">
                                {.section memberOf}{@}{.end}
                                <b>{link}</b>
                                {.section paramsString}({@}){.end}
                            </div>
                            <div class="description">{description}</div>
                        </td>
                    </tr>
                    {.end}
                </tbody>
            </table>
            {.end}
            {.section inherited}
            <dl class="inheritsList">
                {.repeated section @}
                <dt>Methods inherited from class {link}: </dt>
                {.repeated section methods}<dd>{link}</dd>{.end}
                {.end}
            </dl>
            {.end}
            {.end}
            <!-- ============================== events summary ======================== -->
            {.section events}
            {.section own}
            <table class="summaryTable" cellspacing="0" summary="A summary of the events documented in the class.">
                <caption>Event Summary</caption>
                <thead>
                    <tr>
                        <th scope="col">Event Attributes</th>
                        <th scope="col">Event Name and Description</th>
                    </tr>
                </thead>
                <tbody>
                    {.repeated section @}
                    <tr>
                        <td class="attributes">
                            {.section isPrivate}&lt;private&gt; {.end}
                            {.section isInner}&lt;inner&gt; {.end}
                            {.section isStatic}&lt;static&gt; {.end}
                            &nbsp;
                        </td>
                        <td class="nameDescription">
                            <div class="fixedFont">
                                {.section memberOf}{@}{.end}
                                <b>{link}</b>
                                {.section paramsString}({@}){.end}
                            </div>
                            <div class="description">{description}</div>
                        </td>
                    </tr>
                    {.end}
                </tbody>
            </table>
            {.end}
            {.section inherited}
            <dl class="inheritsList">
                {.repeated section @}
                <dt>Events inherited from class {link}: </dt>
                {.repeated section methods}<dd>{link}</dd>{.end}
                {.end}
            </dl>
            {.end}
            {.end}
            <!-- ============================== constructor details ==================== -->
            <if test="!data.isBuiltin() && (data.isNamespace || data.is('CONSTRUCTOR'))">
            <div class="details"><a name="constructor"> </a>
                <div class="sectionTitle">
                    {+classType+}Detail
                </div>

                <div class="fixedFont">{!
                    if (data.isPrivate) output += "&lt;private&gt; ";
                    if (data.isInner) output += "&lt;inner&gt; ";
                !}
                        <b>{+ data.alias +}</b><if test="classType != 'Namespace '">{+ makeSignature(data.params) +}</if>
                </div>

                <div class="description">
                    {+resolveLinks(data.desc)+}
                    <if test="data.author"><br /><i>Author: </i>{+data.author+}.</if>
                </div>

                <if test="data.example.length">
                <for each="example" in="data.example">
                <pre class="code">{+example+}</pre>
                </for>
                </if>


                    <if test="data.params.length">
                        <dl class="detailList">
                        <dt class="heading">Parameters:</dt>
                        <for each="item" in="data.params">
                            <dt>
                                {+((item.type)?""+("<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type)+"}</span> ")) : "")+} <b>{+item.name+}</b>
                                <if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
                            </dt>
                                <dd>{+resolveLinks(item.desc)+}</dd>
                        </for>
                        </dl>
                    </if>
                    <if test="data.deprecated">
                        <dl class="detailList">
                        <dt class="heading">Deprecated:</dt>
                        <dt>
                            {+resolveLinks(data.deprecated)+}
                        </dt>
                        </dl>
                    </if>
                    <if test="data.since">
                        <dl class="detailList">
                        <dt class="heading">Since:</dt>
                            <dd>{+ data.since +}</dd>
                        </dl>
                    </if>
                    <if test="data.exceptions.length">
                        <dl class="detailList">
                        <dt class="heading">Throws:</dt>
                        <for each="item" in="data.exceptions">
                            <dt>
                                {+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
                            </dt>
                                <dd>{+resolveLinks(item.desc)+}</dd>
                        </for>
                        </dl>
                    </if>
                    <if test="data.returns.length">
                        <dl class="detailList">
                        <dt class="heading">Returns:</dt>
                        <for each="item" in="data.returns">
                                <dd>{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
                        </for>
                        </dl>
                    </if>
                    <if test="data.requires.length">
                        <dl class="detailList">
                        <dt class="heading">Requires:</dt>
                        <for each="item" in="data.requires">
                            <dd>{+ resolveLinks(item) +}</dd>
                        </for>
                        </dl>
                    </if>
                    <if test="data.see.length">
                        <dl class="detailList">
                        <dt class="heading">See:</dt>
                        <for each="item" in="data.see">
                            <dd>{+ new Link().toSymbol(item) +}</dd>
                        </for>
                        </dl>
                    </if>

            </div>
            </if>

<!-- ============================== field details ========================== -->
            <if test="defined(ownProperties) && ownProperties.length">
                <div class="sectionTitle">
                    Field Detail
                </div>
                <for each="member" in="ownProperties">
                    <a name="{+Link.symbolNameToLinkName(member)+}"> </a>
                    <div class="fixedFont">{!
                        if (member.isPrivate) output += "&lt;private&gt; ";
                        if (member.isInner) output += "&lt;inner&gt; ";
                        if (member.isStatic) output += "&lt;static&gt; ";
                        if (member.isConstant) output += "&lt;constant&gt; ";
                    !}

                    <if test="member.type"><span class="light">{{+new Link().toSymbol(member.type)+}}</span></if>
                    <if test="member.isStatic && member.memberOf != '_global_'"><span class="light">{+member.memberOf+}.</span></if><b>{+member.name+}</b>

                    </div>
                    <div class="description">
                        {+resolveLinks(member.desc)+}
                        <if test="member.srcFile != data.srcFile">
                            <br />
                            <i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
                        </if>
                        <if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>
                    </div>

                    <if test="member.example.length">
                    <for each="example" in="member.example">
                    <pre class="code">{+example+}</pre>
                    </for>
                    </if>

                        <if test="member.deprecated">
                            <dl class="detailList">
                            <dt class="heading">Deprecated:</dt>
                            <dt>
                                {+ resolveLinks(member.deprecated) +}
                            </dt>
                            </dl>
                        </if>
                        <if test="member.since">
                            <dl class="detailList">
                            <dt class="heading">Since:</dt>
                                <dd>{+ member.since +}</dd>
                            </dl>
                        </if>
                        <if test="member.see.length">
                            <dl class="detailList">
                            <dt class="heading">See:</dt>
                            <for each="item" in="member.see">
                            <dd>{+ new Link().toSymbol(item) +}</dd>
                            </for>
                            </dl>
                        </if>
                        <if test="member.defaultValue">
                            <dl class="detailList">
                            <dt class="heading">Default Value:</dt>
                            <dd>
                                {+resolveLinks(member.defaultValue)+}
                            </dd>
                            </dl>
                        </if>

                    <if test="!$member_last"><hr /></if>
                </for>
            </if>

<!-- ============================== method details ========================= -->
            <if test="defined(ownMethods) && ownMethods.length">
                <div class="sectionTitle">
                    Method Detail
                </div>
                <for each="member" in="ownMethods">
                    <a name="{+Link.symbolNameToLinkName(member)+}"> </a>
                    <div class="fixedFont">{!
                        if (member.isPrivate) output += "&lt;private&gt; ";
                        if (member.isInner) output += "&lt;inner&gt; ";
                        if (member.isStatic) output += "&lt;static&gt; ";
                    !}

                    <if test="member.type"><span class="light">{{+new Link().toSymbol(member.type)+}}</span></if>
                    <if test="member.isStatic && member.memberOf != '_global_'"><span class="light">{+member.memberOf+}.</span></if><b>{+member.name.replace(/\^\d+$/, '')+}</b>{+makeSignature(member.params)+}

                    </div>
                    <div class="description">
                        {+resolveLinks(member.desc)+}
                        <if test="member.srcFile != data.srcFile">
                            <br />
                            <i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
                        </if>
                        <if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>
                    </div>

                    <if test="member.example.length">
                    <for each="example" in="member.example">
                    <pre class="code">{+example+}</pre>
                    </for>
                    </if>

                        <if test="member.params.length">
                            <dl class="detailList">
                            <dt class="heading">Parameters:</dt>
                            <for each="item" in="member.params">
                                <dt>
                                    {+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}<b>{+item.name+}</b>
                                    <if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
                                </dt>
                                <dd>{+resolveLinks(item.desc)+}</dd>
                            </for>
                            </dl>
                        </if>
                        <if test="member.deprecated">
                            <dl class="detailList">
                            <dt class="heading">Deprecated:</dt>
                            <dt>
                                {+ resolveLinks(member.deprecated) +}
                            </dt>
                            </dl>
                        </if>
                        <if test="member.since">
                            <dl class="detailList">
                            <dt class="heading">Since:</dt>
                                <dd>{+ member.since +}</dd>
                            </dl>
                            </dl>
                        </if>
                        <if test="member.exceptions.length">
                            <dl class="detailList">
                            <dt class="heading">Throws:</dt>
                            <for each="item" in="member.exceptions">
                                <dt>
                                    {+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
                                </dt>
                                <dd>{+resolveLinks(item.desc)+}</dd>
                            </for>
                            </dl>
                        </if>
                        <if test="member.returns.length">
                            <dl class="detailList">
                            <dt class="heading">Returns:</dt>
                            <for each="item" in="member.returns">
                                <dd>{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
                            </for>
                            </dl>
                        </if>
                        <if test="member.requires.length">
                            <dl class="detailList">
                            <dt class="heading">Requires:</dt>
                            <for each="item" in="member.requires">
                                <dd>{+ resolveLinks(item) +}</dd>
                            </for>
                            </dl>
                        </if>
                        <if test="member.see.length">
                            <dl class="detailList">
                            <dt class="heading">See:</dt>
                            <for each="item" in="member.see">
                                <dd>{+ new Link().toSymbol(item) +}</dd>
                            </for>
                            </dl>
                        </if>

                    <if test="!$member_last"><hr /></if>
                </for>
            </if>

<!-- ============================== event details ========================= -->
            <if test="defined(ownEvents) && ownEvents.length">
                <div class="sectionTitle">
                    Event Detail
                </div>
                <for each="member" in="ownEvents">
                    <a name="event:{+Link.symbolNameToLinkName(member)+}"> </a>
                    <div class="fixedFont">{!
                        if (member.isPrivate) output += "&lt;private&gt; ";
                        if (member.isInner) output += "&lt;inner&gt; ";
                        if (member.isStatic) output += "&lt;static&gt; ";
                    !}

                    <if test="member.type"><span class="light">{{+new Link().toSymbol(member.type)+}}</span></if>
                    <if test="member.isStatic && member.memberOf != '_global_'"><span class="light">{+member.memberOf+}.</span></if><b>{+member.name+}</b>{+makeSignature(member.params)+}

                    </div>
                    <div class="description">
                        {+resolveLinks(member.desc)+}
                        <if test="member.srcFile != data.srcFile">
                            <br />
                            <i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
                        </if>
                        <if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>
                    </div>

                    <if test="member.example.length">
                    <for each="example" in="member.example">
                    <pre class="code">{+example+}</pre>
                    </for>
                    </if>

                        <if test="member.params.length">
                            <dl class="detailList">
                            <dt class="heading">Parameters:</dt>
                            <for each="item" in="member.params">
                                <dt>
                                    {+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}<b>{+item.name+}</b>
                                    <if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
                                </dt>
                                <dd>{+ resolveLinks(item.desc) +}</dd>
                            </for>
                            </dl>
                        </if>
                        <if test="member.deprecated">
                            <dl class="detailList">
                            <dt class="heading">Deprecated:</dt>
                            <dt>
                                {+ resolveLinks(member.deprecated) +}
                            </dt>
                            </dl>
                        </if>
                        <if test="member.since">
                            <dl class="detailList">
                            <dt class="heading">Since:</dt>
                                <dd>{+ member.since +}</dd>
                            </dl>
                            </dl>
                        </if>
                        <if test="member.exceptions.length">
                            <dl class="detailList">
                            <dt class="heading">Throws:</dt>
                            <for each="item" in="member.exceptions">
                                <dt>
                                    {+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
                                </dt>
                                <dd>{+ resolveLinks(item.desc) +}</dd>
                            </for>
                            </dl>
                        </if>
                        <if test="member.returns.length">
                            <dl class="detailList">
                            <dt class="heading">Returns:</dt>
                            <for each="item" in="member.returns">
                                <dd>{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
                            </for>
                            </dl>
                        </if>
                        <if test="member.requires.length">
                            <dl class="detailList">
                            <dt class="heading">Requires:</dt>
                            <for each="item" in="member.requires">
                                <dd>{+ resolveLinks(item) +}</dd>
                            </for>
                            </dl>
                        </if>
                        <if test="member.see.length">
                            <dl class="detailList">
                            <dt class="heading">See:</dt>
                            <for each="item" in="member.see">
                                <dd>{+ new Link().toSymbol(item) +}</dd>
                            </for>
                            </dl>
                        </if>

                    <if test="!$member_last"><hr /></if>
                </for>
            </if>

            <hr />
        </div>
        {.end}
<!-- ============================== footer ================================= -->
        {footer}
    </body>
</html>